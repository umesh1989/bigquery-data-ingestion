[snowflake]
db = raw
schema = public
insert_query_struct = COPY INTO {}.{}.{}({}) FROM (select {} FROM @{}.{}.umesh_test/{}.json.gz);
schema_check = show columns in table {}.{}.{}
create_table = create table {}.{}.{} ({})
put_to_stage = put file://{} @{}.{}.umesh_test;
max_date_query = select max({}) from {}
clean_stage = REMOVE @{}.{}.umesh_test PATTERN='.*{}.*';
employees_insert = COPY INTO {}.{}.employees(id, first_name, last_name, email, gender, status, position, supervisor, employment_type, weekly_hours, hire_date, contract_ends, termination_date, probation_period_end, created_at, last_modified, subcompany, office, department, cost_center, public_holidays, absence_entitlement, work_schedule, vacation_day_balance, last_day_of_work, team, business_unit, kst1, kst2, job_profile, bootcamp_no, candidate_id) FROM (select $1:id::number, $1:first_name::varchar, $1:last_name::varchar, $1:email::varchar, $1:gender::varchar, $1:status::varchar, $1:position::varchar, $1:supervisor::varchar, $1:employment_type::varchar, $1:weekly_hours::varchar, $1:hire_date::varchar, $1:contract_ends::varchar, $1:termination_date::varchar, $1:probation_period_end::varchar, $1:created_at::varchar, $1:last_modified::varchar, $1:subcompany::varchar, $1:office::variant, $1:department::variant, $1:cost_center::variant, $1:public_holidays::variant, $1:absence_entitlement::variant, $1:work_schedule::variant, $1:vacation_day_balance::number, $1:last_day_of_work::varchar, $1:team::varchar, $1:business_unit::varchar, $1:kst1::varchar, $1:kst2::varchar, $1:job_profile::varchar, $1:bootcamp_no::varchar, $1:candidate_id::varchar FROM @{}.{}.umesh_test/employees.json.gz);
show_columns = show columns in {}.{}.{}
check_duplicates = select id from {} group by id having count(*) >1
drop_duplicates = delete from {} where id in (select id from {} group by id having count(*) >1) and insert_time <(select max(insert_time) from {})


[bigquery]
schema = BIGQUERY
table_relation = {"enter_your_dataset-name":"table_in_snowflake"} ;this json can be extended for multiple datasets
select_data = select * from {}.{} limit 1
full_fetch = events_20230401
bq_count_query = select count(*) from {}.{}
item_filter = select count(distinct(items.item_id)) FROM {}.{}, Unnest(items) as items ;
data_query = SELECT	* from {}.{}
db_count_query = select count(*) from {}.{}.{} where table_id = '{}'
delete_query = delete from {}.{}.{} where table_id = '{}'
